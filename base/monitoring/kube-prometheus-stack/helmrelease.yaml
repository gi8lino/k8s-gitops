---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 26.1.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 5m
  values:
    alertmanager:
      config:
        global:
          resolve_timeout: 10m
        route:
          group_by:
            - job
          group_interval: 2m
          group_wait: 60s
          receiver: slack  # default receiver
          repeat_interval: 2h
          routes:
            - receiver: healthchecks
              matchers:
                - alertname = Watchdog
              repeat_interval: 15m
            - receiver: slack
      ingress:
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: traefik-allow-lan-only@kubernetescrd,authentik-ak-outpost-authentik-embedded-outpost@kubernetescrd
        enabled: true
        hosts:
          - alertmanager.local.${BASE_DOMAIN}
        ingressClassName: traefik
        pathType: Prefix
        paths:
          - /
    defaultRules:
      rules:
        etcd: false
        kubeScheduler: false
    grafana:
      envFromSecret: kube-prometheus-stack-grafana-settings
      adminPassword: $__env{GRAFANA_ADMIN_PASSWORD}
      defaultDashboardsTimezone: browser
      analytics:
        check_for_updates: false
      grafana.ini:
        auth:
          disable_login_form: true
          oauth_auto_login: true
        auth.basic:
          enabled: false
        auth.generic_oauth:
          enabled: true
          allow_sign_up: true
          name: SSO
          client_id: $__env{GRAFANA_AUTH_CLIENT_ID}
          client_secret: $__env{GRAFANA_AUTH_CLIENT_SECRET}
          auth_url: https://auth.${BASE_DOMAIN}/application/o/authorize/
          token_url: https://auth.${BASE_DOMAIN}/application/o/token/
          api_url: https://auth.${BASE_DOMAIN}/application/o/userinfo/
          scopes: openid profile email
          signout_redirect_url: https://auth.${BASE_DOMAIN}/application/o/kubernetes-grafana/end-session/
          role_attribute_path: contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
        server:
          root_url: https://grafana.local.${BASE_DOMAIN}
      sidecar:
        dashboards:
          enabled: true
          searchNamespace: ALL
          resource: configmap
        datasources:
          enabled: true
          searchNamespace: ALL
          resource: configmap
      ingress:
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: traefik-allow-lan-only@kubernetescrd
        enabled: true
        hosts:
          - grafana.local.${BASE_DOMAIN}
        ingressClassName: traefik
        pathType: Prefix
        paths:
          - /
      plugins:
        - grafana-piechart-panel
        - grafana-worldmap-panel
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeProxy:
      enabled: true
      endpoints:
        - ${HOST_IP}
    kubeScheduler:
      enabled: true
      endpoints:
        - ${HOST_IP}
    prometheus:
      ingress:
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: traefik-allow-lan-only@kubernetescrd,authentik-ak-outpost-authentik-embedded-outpost@kubernetescrd
        enabled: true
        hosts:
          - prometheus.local.${BASE_DOMAIN}
        ingressClassName: traefik
        pathType: Prefix
        paths:
          - /
      prometheusSpec:
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        additionalScrapeConfigs:
          - job_name: node-exporter
            static_configs:
              - targets:
                  - 10.0.0.3:9100  # prometheus node exporter
                  - 10.0.0.4:9100  # prometheus node exporter
          - job_name: docker
            static_configs:
              - targets:
                  - 10.0.0.4:8080  # cadvisor
    prometheus-node-exporter:
      extraArgs:
        - --collector.filesystem.mount-points-exclude=^/(mnt|dev|proc|sys|var/lib/docker/.+)($|/)
        - --collector.textfile.directory=/run/prometheus
      extraHostVolumeMounts:
        - name: node-exporter-textfile-collector-scripts
          hostPath: /run/prometheus
          mountPath: /run/prometheus
          readOnly: true
  valuesFrom:
    - kind: Secret
      name: kube-prometheus-stack-helm-values
      optional: false
  install:
    crds: Skip
  upgrade:
    crds: Skip
