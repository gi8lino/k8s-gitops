---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: prometheus
  namespace: monitoring
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/instance: kube-prometheus-stack-prometheus
      app.kubernetes.io/name: prometheus
  ingress:
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: traefik-traefik
            app.kubernetes.io/name: traefik
            io.kubernetes.pod.namespace: traefik
        - matchLabels:
            app.kubernetes.io/name: grafana
            io.kubernetes.pod.namespace: monitoring
        - matchLabels:
            app.kubernetes.io/name: minio
            io.kubernetes.pod.namespace: minio
      toPorts:
        - ports:
            - port: "9090"
              protocol: TCP
  egress:
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
    - toEntities:
        - host
      toPorts:
        - ports:
            - port: "6443" # kube-api
            - port: "9100" # prometheus node exporter
            - port: "9633"
            - port: "9962" # cilium metrics
            - port: "9963" # cilium metrics
            - port: "9965" # cilium metrics
            - port: "10250" # kubelet
            - port: "10257" # kube-controller-manager
            - port: "10259" # kube-scheduler
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: kube-prometheus-stack-alertmanager
            app.kubernetes.io/name: alertmanager
            io.kubernetes.pod.namespace: monitoring
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
            - port: "9093"
              protocol: TCP
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: kube-prometheus-stack
            app.kubernetes.io/name: kube-state-metrics
            io.kubernetes.pod.namespace: monitoring
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
    - toEndpoints:
        - matchLabels:
            app: kube-prometheus-stack-operator
            release: kube-prometheus-stack
            io.kubernetes.pod.namespace: monitoring
      toPorts:
        - ports:
            - port: "10250" # kubelet
              protocol: TCP
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: kube-prometheus-stack
            app.kubernetes.io/name: grafana
            io.kubernetes.pod.namespace: monitoring
      toPorts:
        - ports:
            - port: "3000"
              protocol: TCP
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "9153"
              protocol: TCP
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: k8up
            app.kubernetes.io/name: k8up
            io.kubernetes.pod.namespace: k8up
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: cloudflare-operator
            app.kubernetes.io/name: cloudflare-operator
            io.kubernetes.pod.namespace: cloudflare-operator
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
