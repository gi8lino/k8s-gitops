---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: prometheus
  namespace: monitoring
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/instance: kube-prometheus-stack-prometheus
      app.kubernetes.io/name: prometheus
  ingress:
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: traefik-traefik
            app.kubernetes.io/name: traefik
            io.kubernetes.pod.namespace: traefik
        - matchLabels:
            app.kubernetes.io/name: grafana
            io.kubernetes.pod.namespace: monitoring
        - matchLabels:
            app.kubernetes.io/name: minio
            io.kubernetes.pod.namespace: minio
      toPorts:
        - ports:
            - port: "9090"
              protocol: TCP
  egress:
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
    - toEntities:
        - host
        - remote-node
      toPorts:
        - ports:
            - port: "6443" # kube-api
            - port: "9100" # prometheus node exporter
            - port: "10250" # kubelet
            - port: "10257" # kube-controller-manager
            - port: "10259" # kube-scheduler
    - toServices:
        - k8sServiceSelector:
            selector:
              matchLabels:
                k8s-app: kube-dns
            namespace: monitoring
      toPorts:
        - ports:
            - port: "9153"
              protocol: TCP
    - toServices:
        - k8sService:
            serviceName: kube-prometheus-stack-alertmanager
            namespace: monitoring
      toPorts:
        - ports:
            - port: "9093"
              protocol: TCP
    - toServices:
        - k8sService:
            serviceName: kube-prometheus-stack-kube-state-metrics
            namespace: monitoring
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
    - toServices:
        - k8sService:
            serviceName: kube-prometheus-stack-operator
            namespace: monitoring
      toPorts:
        - ports:
            - port: "10250" # kubelet
              protocol: TCP
    - toServices:
        - k8sService:
            serviceName: kube-prometheus-stack-grafana
            namespace: monitoring
      toPorts:
        - ports:
            - port: "3000"
              protocol: TCP
