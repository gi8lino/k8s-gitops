---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: prometheus-blackbox-exporter
  namespace: monitoring
spec:
  interval: 20m
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: prometheus-blackbox-exporter
      version: 8.17.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 30m
  values:
    pspEnabled: false
    config:
      modules:
        http_2xx_higher_timeout:
          prober: http
          timeout: 30s
          http:
            valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
            follow_redirects: true
            preferred_ip_protocol: "ip4"
        newsnab:
          prober: http
          timeout: 5s
          http:
            valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
            follow_redirects: true
            preferred_ip_protocol: "ip4"
            fail_if_body_not_matches_regexp:
              - ${NEWSNAB_REGEX}
    ingress:
      enabled: true
      className: nginx
      annotations:
        nginx.ingress.kubernetes.io/auth-url: "https://oauth2-proxy.${BASE_DOMAIN}/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.${BASE_DOMAIN}/oauth2/start?rd=$scheme://$best_http_host$request_uri"
        nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user, x-auth-request-email, x-auth-request-access-token"
        nginx.ingress.kubernetes.io/whitelist-source-range: ${LAN_NETWORK_RANGE},${POD_NETWORK_RANGE}
        cloudflare-operator.io/ignore: "true"
      hosts:
        - host: blackbox.local.${BASE_DOMAIN}
          paths:
            - path: /
              pathType: ImplementationSpecific
    serviceMonitor:
      enabled: true
      defaults:
        interval: 15m
        scrapeTimeout: 30s
        follow_redirects: false
      targets:
        - name: ${BASE_DOMAIN/./-}
          url: https://sso.${BASE_DOMAIN}
        - name: pihole
          url: https://pihole.local.${BASE_DOMAIN}
        - name: tools
          url: https://traefik.tools.${BASE_DOMAIN}
        - name: diskstation
          url: https://ds.local.${BASE_DOMAIN}
          scrapeTimeout: 2m
          interval: 60m
          module: http_2xx_higher_timeout
    prometheusRule:
      enabled: true
      rules:
        - alert: SSLCertExpiringSoon
          expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 29
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: |-
              SSL certificate «{{ $labels.instance }}» expires soon
            description: |-
              SSL certificate will expire in {{ $value | humanizeDuration }} (instance {{ $labels.instance }})
        - alert: Newsnab
          expr: last_over_time(probe_failed_due_to_regex{target="newsnab"}[60m]) == 1
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: Newsnab API is expired
            description: Newsnab API for «{{ $labels.target }}» is expired
        - alert: BlackboxProbeFailed
          expr: last_over_time(probe_success[15m]) == 0
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: Host is unreachable
            description: The host «{{ $labels.target }}» is currently unreachable
