---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: minio
  namespace: minio
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/instance: minio
      app.kubernetes.io/name: minio
  ingress:
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: kube-prometheus-stack-prometheus
            app.kubernetes.io/name: prometheus
            io.kubernetes.pod.namespace: monitoring
        - matchLabels:
            app.kubernetes.io/instance: minio
            app.kubernetes.io/name: minio
            app: minio-job
      toPorts:
        - ports:
            - port: "9000"
              protocol: TCP
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: traefik
            app.kubernetes.io/name: traefik
            io.kubernetes.pod.namespace: traefik
      toPorts:
        - ports:
            - port: "9000" # minio-api (for terraform states)
              protocol: TCP
            - port: "9001" # minio-console
              protocol: TCP
  egress:
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/instance: kube-prometheus-stack-prometheus
            app.kubernetes.io/name: prometheus
            io.kubernetes.pod.namespace: monitoring
      toPorts:
        - ports:
            - port: "9090"
              protocol: TCP
    - toServices:
        - k8sService:
            serviceName: traefik
            namespace: traefik
      toPorts:
        - ports:
            - port: "8443" # oidc: to access load balancer (https://sso.${BASE_DOMAIN})
              protocol: TCP
    - toFQDNs:
        - matchName: dl.min.io
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
