---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: wiki
  namespace: wiki
spec:
  endpointSelector:
    matchLabels:
      app: wiki
      component: wiki
  ingress:
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/name: ingress-nginx
            app.kubernetes.io/component: controller
            app.kubernetes.io/instance: ingress-nginx
            "k8s:io.kubernetes.pod.namespace": ingress-nginx
      toPorts:
        - ports:
            - port: "3000"
              protocol: TCP
  egress:
    - toEndpoints:
        - matchLabels:
            "k8s:io.kubernetes.pod.namespace": kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
    - toEndpoints:
        - matchLabels:
            cnpg.io/cluster: wiki-psql
            cnpg.io/podRole: instance
            "k8s:io.kubernetes.pod.namespace": wiki
        - matchLabels:
            app: wiki
            component: postgres
            "k8s:io.kubernetes.pod.namespace": wiki
      toPorts:
        - ports:
            - port: "5432"
              protocol: TCP
    - toFQDNs:
        - matchName: ${SMTP_DOMAIN}
      toPorts:
        - ports:
            - port: "587"
              protocol: TCP
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: ingress-nginx
            app.kubernetes.io/component: controller
            app.kubernetes.io/instance: ingress-nginx
            "k8s:io.kubernetes.pod.namespace": ingress-nginx
      toPorts:
        - ports:
            - port: "443" # oidc: to access load balancer (https://auth.${BASE_DOMAIN})
              protocol: TCP
    - toFQDNs:
        - matchName: graph.requarks.io
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
