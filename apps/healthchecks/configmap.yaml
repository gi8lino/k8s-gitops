---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prunes
  namespace: healthchecks
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
data:
  prunes: |
    #!/usr/bin/env bash

    function send_healthchecks {
      local send_failed="${1}"
      curl --retry 3 \
           --max-time 5 \
           --silent \
           --show-error \
           "${HEALTHCHECKS_URL}$([ -n "${send_failed}" ] && echo -n /fail)" > /dev/null
    }

    function notify {
      send_healthchecks true
      echo "ERROR: Unable to prune!"
    }

    trap notify ERR

    [[ -z "${HEALTHCHECKS_URL}" ]] && echo "HEALTHCHECKS_URL is not set!" && exit 1

    python3 /app/healthchecks/manage.py prunepings
    python3 /app/healthchecks/manage.py prunenotifications
    python3 /app/healthchecks/manage.py pruneusers
    python3 /app/healthchecks/manage.py prunetokenbucket
    python3 /app/healthchecks/manage.py pruneflips

    send_healthchecks
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: startup
  namespace: healthchecks
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
data:
  startup: |
    #!/usr/bin/env bash

    if ! command -v crond >/dev/null; then
      echo "crond not found"
      exit 1
    fi

    if ! curl --silent --fail http://localhost:8000/api/v1/status; then
      echo "healthchecks not ready"
      exit 1
    fi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logo
  namespace: healthchecks
binaryData:
  logo.png: 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
