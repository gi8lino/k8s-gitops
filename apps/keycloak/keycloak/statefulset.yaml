---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master-standalone/statefulset-apps-v1.json
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  namespace: keycloak
spec:
  selector:
    matchLabels: {}
  replicas: 1
  serviceName: keycloak-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels: {}
    spec:
      initContainers:
        - name: wait-for-database
          image: ghcr.io/containeroo/wait-for-tcp:0.0.15
          env:
            - name: TARGET_NAME
              value: PostgreSQL
            - name: TARGET_ADDRESS
              value: postgres.keycloak.svc.cluster.local:5432
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
            limits:
              cpu: 10m
              memory: 16Mi
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:25.0.1
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          args:
            - start
          envFrom:
            - secretRef:
                name: keycloak
          env:
            - name: KC_HOSTNAME
              value: sso.${BASE_DOMAIN}
            - name: KC_CACHE
              value: ispn
            - name: KC_CACHE_STACK
              value: kubernetes
            - name: KC_PROXY_HEADERS
              value: xforwarded
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_METRICS_ENABLED
              value: "true"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_FEATURES
              value: persistent-user-sessions,hostname:v2
            - name: KC_DB_URL
              value: jdbc:postgresql://postgres.keycloak.svc.cluster.local/postgres
            - name: KC_DB
              value: postgres
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_USER
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_PASSWORD
            - name: TZ
              value: Europe/Zurich
            - name: JAVA_OPTS_APPEND
              value: -Djgroups.dns.query=keycloak-headless
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: health
              containerPort: 9000
              protocol: TCP
          startupProbe:
            httpGet:
              path: /health
              port: health
            initialDelaySeconds: 7
            timeoutSeconds: 1
            failureThreshold: 60
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health/live
              port: health
            initialDelaySeconds: 0
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: health
            initialDelaySeconds: 10
            timeoutSeconds: 1
          resources: {}
          volumeMounts:
            - name: keycloak-providers
              mountPath: /opt/keycloak/providers
      serviceAccountName: keycloak
      securityContext:
        fsGroup: 1000
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: keycloak
                  component: keycloak
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: keycloak
                    component: keycloak
                namespaces: []
                topologyKey: topology.kubernetes.io/zone
              weight: 100
      terminationGracePeriodSeconds: 60
      volumes:
        - name: keycloak-providers
          persistentVolumeClaim:
            claimName: keycloak-providers
