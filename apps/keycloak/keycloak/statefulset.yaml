---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
    component: keycloak
spec:
  replicas: 1
  podManagementPolicy: Parallel
  serviceName: keycloak-headless
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: keycloak
      component: keycloak
  template:
    metadata:
      labels:
        app: keycloak
        component: keycloak
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: keycloak
                    component: keycloak
                namespaces:
                  - keycloak
                topologyKey: kubernetes.io/hostname
              weight: 1
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
      initContainers:
        - name: wait-for-database
          image: busybox:1.35.0
          command:
            - sh
            - -c
            - |
              echo 'Waiting for PostgreSQL to become ready...'
              until printf "." && nc -z -w 2 keycloak-postgres.keycloak.svc.cluster.local 5432; do
                  sleep 2;
              done;
              echo 'PostgreSQL OK âœ“'
          resources:
            requests:
              cpu: 20m
              memory: 32Mi
            limits:
              cpu: 20m
              memory: 32Mi
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:18.0.2
          args:
            - start
            - --auto-build
          env:
            - name: KC_DB_URL
              value: jdbc:postgresql://keycloak-postgres.keycloak.svc.cluster.local/postgres
            - name: KC_DB
              value: postgres
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: keycloak-postgres
                  key: POSTGRES_USER
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-postgres
                  key: POSTGRES_PASSWORD
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_PROXY
              value: edge
            - name: KC_HOSTNAME
              value: sso.${BASE_DOMAIN}
            - name: TZ
              value: Europe/Zurich
          envFrom:
            - secretRef:
                name: keycloak
          ports:
            - name: http
              containerPort: 8080
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            failureThreshold: 60
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            failureThreshold: 2
            periodSeconds: 30
      restartPolicy: Always
      automountServiceAccountToken: false
