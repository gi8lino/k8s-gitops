---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: falco
  namespace: falco
spec:
  interval: 20m
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: falco
      version: 4.5.3
      sourceRef:
        kind: HelmRepository
        name: falcosecurity
        namespace: flux-system
      interval: 20m
  values:
    driver:
      kind: ebpf
    collectors:
      containerd:
        enabled: true
        socket: /run/k3s/containerd/containerd.sock
      crio:
        enabled: false
      docker:
        enabled: false
    falcosidekick:
      enabled: true
      replicaCount: 1
      config:
        slack:
          minimumpriority: notice
      webui:
        enabled: true
        replicaCount: 1
        disableauth: true
        ingress:
          enabled: true
          annotations:
            nginx.ingress.kubernetes.io/auth-url: "https://oauth2-proxy.${BASE_DOMAIN}/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.${BASE_DOMAIN}/oauth2/start?rd=$scheme://$best_http_host$request_uri"
            nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user, x-auth-request-email, x-auth-request-access-token"
            nginx.ingress.kubernetes.io/whitelist-source-range: ${LAN_NETWORK_RANGE},${POD_NETWORK_RANGE_IPV4}
            cloudflare-operator.io/ignore: "true"
          hosts:
            - host: falco.local.${BASE_DOMAIN}
              paths:
                - path: /
    tty: true
    customRules:
      falco_rules.local.yaml: |-
        - macro: user_known_stand_streams_redirect_activities
          condition: >
            (k8s.ns.name="gitlab" and container.name in ("gitlab-shell", "gitlab-workhorse"))

        - list: user_known_packet_socket_binaries
          items: [speaker]

        - macro: always_true
          condition: (evt.num>=0)

        - macro: user_known_contact_k8s_api_server_activities
          condition: (always_true)

        - macro: known_drop_and_execute_activities
          condition: >
            (k8s.ns.name="gitlab" and container.name in ("gitaly", "build"))
            or (k8s.ns.name="media" and container.name="plex" and proc.name in ("Plex Media Serv", "Plex Media Fing", "Plex Transcoder", "Plex Media Scan", "Plex Script Hos"))
            or (k8s.ns.name="media" and container.name="sabnzbd" and proc.name in ("mkvmerge", "gio-querymodule"))

        - macro: user_known_read_sensitive_files_activities
          condition: >
            (proc.name startswith "python3")
            or (k8s.ns.name="gitlab" and proc.exepath="/kaniko/executor")

        - macro: allowed_clear_log_files
          condition: (fd.name startswith "/var/lib/rancher/k3s")

        - macro: inbound
          condition: >
            (evt.rawres >= 0) and
            (evt.type in (accept, accept4, connect, listen)) and
            (fd.typechar in (4)) and
            (fd.l4proto in (tcp, udp))
    
        - rule: Detect SSH Connections
          desc: Detect any incoming SSH connection
          condition: inbound and (fd.sport=22 or fd.dport=22)
          output: "SSH connection detected (user=%user.name user_loginuid=%user.loginuid user_loginname=%user.loginname command=%proc.cmdline parent=%proc.pname connection=%fd.name)"
          priority: WARNING
          tags: [network, ssh]
  
  valuesFrom:
    - kind: Secret
      name: falco-helm-values
      optional: false
