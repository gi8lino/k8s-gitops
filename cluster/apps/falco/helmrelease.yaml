---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: falco
  namespace: falco
spec:
  interval: 20m
  driftDetection:
    mode: enabled
  dependsOn:
    - name: metallb
      namespace: metallb-system
  chart:
    spec:
      chart: falco
      version: 4.19.0
      sourceRef:
        kind: HelmRepository
        name: falcosecurity
        namespace: flux-system
      interval: 20m
  values:
    driver:
      kind: modern_ebpf
    collectors:
      kubernetes:
        enabled: true
      containerd:
        enabled: false
      crio:
        enabled: false
      docker:
        enabled: false
    falco:
      container_engines:
        cri:
          enabled: true
    falcosidekick:
      enabled: false
      replicaCount: 1
      config:
        slack:
          minimumpriority: notice
      webui:
        enabled: true
        replicaCount: 1
        disableauth: true
        ingress:
          enabled: true
          ingressClassName: nginx
          annotations:
            nginx.ingress.kubernetes.io/auth-url: "https://oauth2-proxy.${BASE_DOMAIN}/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.${BASE_DOMAIN}/oauth2/start?rd=$scheme://$best_http_host$request_uri"
            nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user, x-auth-request-email, x-auth-request-access-token"
            nginx.ingress.kubernetes.io/whitelist-source-range: ${LAN_NETWORK_RANGE_V4},${POD_NETWORK_RANGE_V4}
            cloudflare-operator.io/ignore: "true"
          hosts:
            - host: falco.local.${BASE_DOMAIN}
              paths:
                - path: /
    tty: true
    customRules:
      falco_rules.local.yaml: |-
        - macro: user_known_stand_streams_redirect_activities
          condition: >
            (k8smeta.ns.name="gitlab" and container.name in ("gitaly", "gitlab-shell", "gitlab-workhorse"))
            or (k8smeta.ns.name="flux-system" and proc.name="gpg-agent")
            or (k8smeta.ns.name="renovate" and container.name="renovate")
            or (container.name="postgres" and proc.exepath="/controller/manager")

        - list: user_known_packet_socket_binaries
          items: [speaker]

        - macro: always_true
          condition: (evt.num>=0)

        - macro: user_known_contact_k8s_api_server_activities
          condition: (always_true)

        - macro: known_drop_and_execute_activities
          condition: >
            (k8smeta.ns.name="gitlab" and container.name in ("gitaly", "build"))
            or (k8smeta.ns.name="media" and container.name="plex" and proc.name in ("Plex Media Serv", "Plex Media Fing", "Plex Transcoder", "Plex Media Scan", "Plex Script Hos", "Plex Tuner Serv"))
            or (k8smeta.ns.name="media" and container.name="sabnzbd" and proc.name in ("mkvmerge", "gio-querymodule"))

        - macro: user_known_read_sensitive_files_activities
          condition: >
            (proc.name startswith "python3")
            or (k8smeta.ns.name="gitlab" and proc.exepath="/kaniko/executor")

        - macro: allowed_clear_log_files
          condition: >
            (fd.name startswith "/var/lib/rancher/k3s")
            or (k8smeta.ns.name="gitlab" and proc.exepath="/kaniko/executor")

        - macro: user_shell_container_exclusions
          condition: >
            (proc.cmdline contains wal-archive)
            or (proc.cmdline contains wal-restore)
  valuesFrom:
    - kind: Secret
      name: falco-helm-values
      optional: false
