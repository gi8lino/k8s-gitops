{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'github>gi8lino/k8s-gitops//.github/renovate/commitMessage.json5',
    'github>gi8lino/k8s-gitops//.github/renovate/labels.json5',
    'github>gi8lino/k8s-gitops//.github/renovate/semanticCommits.json5',
  ],
  semanticCommits: 'enabled',
  dependencyDashboard: true,
  separateMajorMinor: true,
  timezone: 'Europe/Zurich',
  assignees: [
    'gi8lino',
  ],
  ignoreDeps: [
    'ghcr.io/fluxcd/helm-controller',
    'ghcr.io/fluxcd/image-automation-controller',
    'ghcr.io/fluxcd/image-reflector-controller',
    'ghcr.io/fluxcd/kustomize-controller',
    'ghcr.io/fluxcd/notification-controller',
    'ghcr.io/fluxcd/source-controller',
  ],
  kubernetes: {
    managerFilePatterns: [
      '/cluster/apps/.+/(cronjob|daemonset|deployment|statefulset)\\.ya?ml$/',
    ],
  },
  'helm-values': {
    managerFilePatterns: [
      '/cluster/apps/.+/helmrelease\\.ya?ml$/',
    ],
  },
  flux: {
    managerFilePatterns: [
      '/cluster/apps/.+/helmrelease\\.ya?ml$/',
      '/cluster/flux/repositories/helm/.*\\.ya?ml$/',
    ],
  },
  customManagers: [
    {
      customType: 'regex',
      description: 'dependencies cloudnative-pg postgres databases',
      managerFilePatterns: [
        '/cluster/apps/.+/cnpg-cluster\\.yaml$/',
      ],
      matchStrings: [
        'imageName:\\s*(?<depName>\\S+):(?<currentValue>\\S+)',
      ],
      datasourceTemplate: 'docker',
      versioningTemplate: 'redhat',
    },
    {
      description: 'dependencies for sync-cloudflare-nets',
      customType: 'regex',
      managerFilePatterns: [
        '/.github/workflows/sync-cloudflare-nets\\.ya?ml$/',
      ],
      matchStrings: [
        'depName=(?<depName>\\S+)\\s.*/(?<currentValue>[^/]+?)/',
      ],
      datasourceTemplate: 'github-releases',
    },
    {
      description: 'dependencies for helm-release-differ',
      customType: 'regex',
      managerFilePatterns: [
        '/.github/workflows/helm-release-differ\\.ya?ml$/',
      ],
      matchStrings: [
        'depName=(?<depName>\\S+)\\s.*version:\\s*(?<currentValue>\\S+)',
      ],
      datasourceTemplate: 'github-releases',
    },
    {
      description: 'Process CRD dependencies',
      customType: 'regex',
      managerFilePatterns: [
        '/cluster/crds/.+\\.ya?ml$/',
      ],
      matchStrings: [
        'registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\\s.*\\/k8up-(?<currentValue>[^/]+)\\/',
        'registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?v?(?<currentValue>[^-\\s]*)\n',
        'datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\\s.*tag:\\s(?<currentValue>.+)',
        'https:\\/\\/github\\.com\\/[^\\/]+\\/[^\\/]+\\/releases\\/download\\/v(?<currentValue>[^\\/]+)\\/'
        'https:\\/\\/github\\.com\\/[^\\n]+\\/releases\\/download\\/(?<currentValue>v?\\d+\\.\\d+\\.\\d+)\\/'
      ],
      datasourceTemplate: '{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}',
      versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}',
    },
    {
      description: 'Process raw GitHub URLs',
      customType: 'regex',
      managerFilePatterns: [
        '/cluster/apps/.+/kustomization\\.ya?ml$/',
      ],
      matchStrings: [
        'https://raw\\.githubusercontent\\.com/(?<depName>[\\w\\-]+/[\\w\\-]+)/(?:v?(?<currentValue>[\\w\\.\\-_]+))/',
      ],
      datasourceTemplate: 'github-releases',
      versioningTemplate: 'semver',
    },
    {
      description: 'Process postRenderer patches with images',
      customType: 'regex',
      managerFilePatterns: [
        '/cluster/apps/oauth2-proxy/oauth2-proxy/helmrelease\\.ya?ml$/',
      ],
      matchStrings: [
        '# renovate\\s*image:\\s+(?<depName>\\S+):v?(?<currentValue>\\S+)',
      ],
      datasourceTemplate: 'docker',
    },
  ],
  packageRules: [
    {
      description: 'Separate cnpg-cluster releases',
      matchPackageNames: [
        'ghcr.io/cloudnative-pg/postgresql',
      ],
      additionalBranchPrefix: '{{packageFileDir}}-',
      major: {
        enabled: false,
      },
    },
    {
      description: 'Separate valkey releases',
      matchPackageNames: [
        'valkey/valkey',
      ],
      additionalBranchPrefix: '{{packageFileDir}}-',
    },
    {
      description: 'Special versioning for linuxserver.io sabnzbd image',
      matchDatasources: [
        'docker',
      ],
      versioning: 'regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-ls(?<build>\\d+)$',
      matchPackageNames: [
        '/^ghcr\\.io\\/linuxserver\\/sabnzbd$/',
      ],
    },
    {
      description: 'Special versioning for linuxserver.io images',
      matchDatasources: [
        'docker',
      ],
      versioning: 'regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)\\.?(?<build>\\d+)?(?:.*)?-ls(?<revision>\\d+)$',
      matchPackageNames: [
        '/^ghcr\\.io\\/linuxserver\\/(plex|prowlarr|radarr|sonarr|tautulli)$/',
      ],
    },
    {
      description: 'Special versioning for minio images',
      matchDatasources: [
        'docker',
      ],
      versioning: 'regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$',
      matchPackageNames: [
        'quay.io/minio/minio',
      ],
    },
    {
      description: 'Auto merge containers',
      matchDatasources: [
        'docker',
      ],
      automerge: true,
      automergeType: 'branch',
      ignoreTests: true,
      matchUpdateTypes: [
        'minor',
        'patch',
      ],
      matchPackageNames: [
        'renovate/renovate',
      ],
    },
  ],
  'pre-commit': {
    enabled: true,
  },
}
